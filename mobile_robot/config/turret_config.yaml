# controller_manager provides the necessary infrastructure to manage multiple controllers efficiently and robustly using ROS 2 Control.
controller_manager:
  ros__parameters:
    update_rate: 10  # Specifies how often (in Hz) the controllers should be updated.

    # JointTrajectoryController allows you to send joint trajectory commands to a group of joints on a robot.
    turret_controller:
      type: joint_trajectory_controller/JointTrajectoryController

    # Responsible for publishing the current state of the robot's joints to the /joint_states ROS 2 topic
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

# Define the parameters for each controller
turret_controller:
  ros__parameters:
    joints:
      - turret_joint

    # The controller will expect position commands as input for each of these joints.
    command_interfaces:
      - position
    
    # Tells the controller that it should expect to receive position data as the state feedback from the hardware interface.
    state_interfaces:
      - position

    # If true, the controller will not use any feedback from the system (e.g., joint positions, velocities, efforts) to compute the control commands.
    open_loop_control: true

    # When set to true, allows the controller to integrate the trajectory goals it receives.
    allow_integration_in_goal_trajectories: true

    constraints:
      stopped_velocity_tolerance: 0.01
      goal_time: 1.0
      turret_joint:
        trajectory: 0.5
        goal: 0.0
